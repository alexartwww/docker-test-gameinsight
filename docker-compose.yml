version: '3'
services:
  project:
    build: project/html
    user: "1000:1000"
    command: ["echo", "TestGameInsight"]
    volumes:
    - ./project/conf/php-cli.ini:/etc/php/7.0/cli/php.ini
    - ./project/conf/20-xdebug.ini:/etc/php/7.0/cli/conf.d/20-xdebug.ini
    - ./project/html:/var/www/html
  php-fpm:
    build: project/html
    volumes:
    - ./project/conf/php-fpm.ini:/etc/php/7.0/fpm/php.ini
    - ./project/conf/php-fpm.conf:/etc/php/7.0/fpm/php-fpm.conf
    - ./project/conf/www.conf:/etc/php/7.0/fpm/pool.d/www.conf
    - ./project/conf/20-xdebug.ini:/etc/php/7.0/fpm/conf.d/20-xdebug.ini
    - ./project/logs:/var/log/php-fpm
    - ./project/html:/var/www/html
    restart: ${PHP_FPM_RESTART}
  cron:
    build: project/html
    command:
    - /bin/sh
    - -c
    - |
      crontab -u www-data crontab
      cron -f -L 7
    volumes:
    - ./project/conf/php-cli.ini:/etc/php/7.0/cli/php.ini
    - ./project/conf/20-xdebug.ini:/etc/php/7.0/cli/conf.d/20-xdebug.ini
    - ./project/html:/var/www/html
    restart: ${CRON_RESTART}
  nginx:
    image: nginx:1.15.5
    ports:
    - "${NGINX_EXTERNAL_PORT}:80"
    volumes:
    - ./services/nginx/conf:/etc/nginx/conf.d
    - ./services/nginx/certs:/etc/nginx/certs
    - ./services/nginx/logs:/var/log/nginx
    - ./services/nginx/cache:/var/cache/nginx
    - ./project/html:/var/www/html
    restart: ${NGINX_RESTART}
  mysql:
    image: mysql:5.7.23
    command: --default-authentication-plugin=mysql_native_password --explicit-defaults-for-timestamp=1 --innodb-buffer-pool-size=${MYSQL_INNODB_BUFFER_POOL_SIZE} --innodb-log-file-size=${MYSQL_INNODB_LOG_FILE_SIZE} --innodb-log-buffer-size=${MYSQL_INNODB_LOG_BUFFER_SIZE} --innodb-flush-log-at-trx-commit=${MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT} --sql-mode=${MYSQL_SQL_MODE} --query-cache-limit=${MYSQL_QUERY_CACHE_LIMIT} --query-cache-size=${MYSQL_QUERY_CACHE_SIZE} --key-buffer-size=${MYSQL_KEY_BUFFER_SIZE} --max-allowed-packet=${MYSQL_MAX_ALLOWED_PACKET} --init-connect='${MYSQL_INIT_CONNECT}' --character-set-server=${MYSQL_CHARACTER_SET_SERVER} --collation-server=${MYSQL_COLLATION_SERVER}
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
    - ./services/mysql/data:/var/lib/mysql
    restart: ${MYSQL_RESTART}
